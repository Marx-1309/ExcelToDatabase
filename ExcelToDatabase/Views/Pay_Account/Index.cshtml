@model List<ExcelToDatabase.Models.AccountVm>

@{
    ViewData["Title"] = "Index";
}

<p>
    <button id="btnProcess" type="button" class="btn btn-primary"> Process Account</button>
    @* <br />
    <br />
    <button type="button" class="btn btn-secondary btn-sm">Export</button> *@
</p>

<div class="card bg-light mb-3" style="max-width: 100rem;">
    <div class="card-header"><b>GL Accounts</b></div>
    <div class="card-body">
@*         <h4 class="card-title">Light card title</h4> *@
        <table class="table table-hover" id="tblAccounts">
            <thead>
                <tr>
                    <th>
                        GL Account
                    </th>
                    <th>
                        Earning
                    </th>
                    <th>
                        Paypoint
                    </th>

                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.GlAccountName)
                        </td>
                         <td>
                            @Html.DisplayFor(modelItem => item.EarningName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PayPointName)
                        </td>
                        <td>
                            <div class="dropdown">
                                <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false"></a>
                                <div class="dropdown-menu">
                                    <a href="#" class="dropdown-item btnManageAcc" data-actindx="@item.AccountId"><img src="~/bsicons/pencil.svg" /> Edit Details</a>
                                    <a href="#" class="dropdown-item btnDeleteAcc" data-actindx="@item.AccountId"><img src="~/bsicons/trash.svg" /> Delete</a>
                                    <!--<a href="#" class="dropdown-item btnManageAcc"  data-actindx="@item.ACTINDX">Manage Account</a>-->

                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@* Modal for adding new account  *@
<div id="AddProcessEarning" class="modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Configure new record</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"></span>
                </button>
            </div>

            <div class="modal-body">
                <div class="row">
                    <!-- First Section with 3 Input Fields -->
                    <div class="col-md-12">
                        <div id="addAccountOuterDiv" style="padding-top:10px" class="row">
                            <div class="form-floating">

                                <select id="accountDropdown" name="ACTINDX" class="form-control">
                                    <option value="">-- Select Account --</option>
                                    @foreach (var account in ViewBag.AllGLAccountsDd)
                                    {
                                        <option value="@account.ACTINDX">@account.ACTDESCR</option>
                                    }
                                </select>
                                <label id="lblAccount" for="accountDropdown">Account</label>
                                <img id="dotLoaderGlAccount" src="~/dot_loader.gif" alt="Loading..." style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 40px; height: 40px;display:none" />
                            </div>
                        </div>
                        <div id="addPayPointOuterDiv" style="padding-top:10px" class="row">
                            <div class="form-floating">

                                <select id="paypointDropdown" name="MonthId" class="form-control">
                                    <option value="">-- Select PayPoint --</option>
                                    @foreach (var paypoint in ViewBag.AllPayPointsDd)
                                    {
                                        <option value="@paypoint.PayPointId">@paypoint.PayPointDescription</option>
                                    }
                                </select>
                                <label id="lblPaypointDropdown" for="paypointDropdown">PayPoint</label>
                                <img id="dotLoaderPaypoint" src="~/dot_loader.gif" alt="Loading..." style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 40px; height: 40px;display:none" />
                            </div>
                        </div>
                        <div id="addEarningOuterDiv" style="position: relative; padding-top:10px" class="row">
                            <div class="form-floating">
                                <select id="earningDropdown" name="EarningId" class="form-control">
                                    <option value="">-- Select Earning Type -- </option>
                                    @foreach (var earning in ViewBag.AllEarningsDd)
                                    {
                                        <option value="@earning.EarningId">@earning.Earning</option>
                                    }
                                </select>
                                <label id="lblEarningDropdown" for="earningDropdown">Earning</label>
                                <!-- Placing the GIF inside the select box -->
                                <img id="dotLoaderEarning" src="~/dot_loader.gif" alt="Loading..." style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 40px; height: 40px; display:none" />
                                
                            </div>
                        </div>

@*                         <div style="padding-top:10px" class="row">
                            <div class="form-floating">
                                <input type="text" id="datepicker"  name="selectedDate" class="form-control">
                                <label id="lblDate" for="datepicker">Date</label>
                            </div>
                        </div> *@
                    </div>

                </div>
            </div>
            <div class="modal-footer">
                <button type="submit" asp-controller="Pay_UploadInstance" asp-action="Create" id="saveChangesBtn" class="btn btn-primary"><img src="~/bsicons/save.svg" /> Save changes</button>
                <button type="button" id="addCloseBtn" class="btn btn-secondary" data-bs-dismiss="modal"><img src="~/bsicons/arrow-down-left.svg" /> Close</button>
            </div>
        </div>
    </div>
</div>


@* madal for modify the account  details  *@
<div id="modalManageAcc" class="modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit record</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"></span>
                </button>
            </div>

            <div class="modal-body">
                <div class="row">
                    <!-- First Section with 3 Input Fields -->
                    <div class="col-md-12">
                        @* Dropdown for GLAccounts *@
                        <div style="padding-top:10px" class="row">
                            <div class="form-floating">
                                <select class="form-select form-select-sm" id="edGLAccountDropdown" aria-label="Floating label select example"></select>
                                <label class="required" for="edGLAccountDropdown">GL Account Type</label>
                            </div>
                        </div>

                        @* Dropdown for Earnings *@
                        <div style="padding-top:10px" class="row">
                            <div class="form-floating">
                                <select class="form-select form-select-sm" id="edEarningDropdown" aria-label="Floating label select example"></select>
                                <label class="required" for="edEarningDropdown">Earning Type</label>
                            </div>
                        </div>

                        @* Dropdown for PayPoints *@
                        <div style="padding-top:10px" class="row">
                            <div class="form-floating">
                                <select class="form-select form-select-sm" id="edPayPointDropdown" aria-label="Floating label select example"></select>
                                <label class="required" for="edPayPointDropdown">Pay Point Type</label>
                            </div>
                        </div>


@*                         <div style="padding-top:10px" class="row">
                            <div class="form-floating">
                                <input type="text" id="edDatepicker" name="selectedDate" class="form-control" data-select="datepicker">
                                <label for="edDatepicker">Date</label>
                            </div>
                        </div> *@

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                
                @* <button class="btn btn-danger btnDeleteAcc" data-actid><img src="~/bsicons/trash.svg" /></button> *@
                <button type="submit" asp-controller="Pay_UploadInstance" asp-action="Create" id="edSaveChangesBtn" class="btn btn-primary"> Save changes</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"> Close</button>
            </div>
        </div>
    </div>
</div>

<link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/1.13.7/css/dataTables.bootstrap5.min.css" rel="stylesheet" />
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap5.min.js"></script>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {

            $('#datepicker').dateTimePicker();

            setTimeout(function () {
                $('#tblAccounts').DataTable();
            }, 500);

            $('#earningDropdown, #paypointDropdown').change(function () {
                var accountValue = $('#accountDropdown').val();
                var earningValue = $('#earningDropdown').val();
                var paypointValue = $('#paypointDropdown').val();

                if (earningValue && paypointValue && accountValue == 0) {
                    $('#accountDropdown').empty().append('<option selected="selected" value="0" disabled = "disabled">Loading.....</option>');
                    $('#dotLoaderGlAccount').css('display', 'block');
                    $('#addAccountOuterDiv').css('pointer-events', 'none'); // Disable pointer events
                    $('#addAccountOuterDiv').css('opacity', '0.5');

                    
                    AddRefreshDropDown();
                    ValidateAddForm();
                    //$('#dotLoaderGlAccount').css('display', 'none');
                }
            });

            $('#accountDropdown, #paypointDropdown').change(function () {
                var accountValue = $('#accountDropdown').val();
                var paypointValue = $('#paypointDropdown').val();
                var earningValue = $('#earningDropdown').val();

                if (accountValue && paypointValue && earningValue == 0) {
                    $('#earningDropdown').empty().append('<option selected="selected" value="0" disabled = "disabled">Loading.....</option>');
                    $('#dotLoaderEarning').css('display', 'block');
                    $('#addEarningOuterDiv').css('pointer-events', 'none'); // Disable pointer events
                    $('#addEarningOuterDiv').css('opacity', '0.5');

                    AddRefreshDropDown();
                    ValidateAddForm();
                    //$('#dotLoaderGlAccount').css('display', 'none');
                    //$('#dotLoaderEarning').css('display', 'none');
                    //$('#dotLoaderPaypoint').css('display', 'none');
                }
            });

            $('#accountDropdown, #earningDropdown').change(function () {
                var accountValue = $('#accountDropdown').val();
                var earningValue = $('#earningDropdown').val();
                var paypointValue = $('#paypointDropdown').val();

                if (accountValue && earningValue && paypointValue == 0) {
                    $('#paypointDropdown').empty().append('<option selected="selected" value="0" disabled = "disabled">Loading.....</option>');
                    $('#dotLoaderPaypoint ').css('display', 'block');
                    $('#addPayPointOuterDiv').css('pointer-events', 'none'); // Disable pointer events
                    $('#addPayPointOuterDiv').css('opacity', '0.5');

                    AddRefreshDropDown();
                    ValidateAddForm();
                    //$('#dotLoaderPaypoint').css('display', 'none');
                }
            });

            // $('#accountDropdown').change(function () {
            //     ValidateAddForm();
            // })

            // $('#paypointDropdown').change(function () {

            //     ValidateAddForm();
            // })

            // $('#earningDropdown').change(function () {
            //     ValidateAddForm();
            // })

            //Remove LoaderDiv if the dropDown value is not Zero
            $('#accountDropdown').change(function () {
                var accountDropdownVal = $('#accountDropdown').val();
                if (accountDropdownVal > 0) {
                    $('#dotLoaderGlAccount').css('display', 'none');
                    
                }
               //new mod
                if ($('#accountDropdown').val().trim() == "" || $('#accountDropdown').val().trim() === "0") {
                    //$('#lblAccount').html()[0].empty();
                    $('#lblAccount').empty();
                    $('#lblAccount').append("Account *").css('color', 'Red');
                    $('#accountDropdown').css('border-color', 'Red');
                    isValid = false;
                }
                else {
                    $('#accountDropdown').css('border-color', 'lightgrey');
                    $('#lblAccount').empty();
                    $('#lblAccount').append("Account").css('color', 'Black');
                }
            })

            $('#paypointDropdown').change(function () {
                var paypointDropdownVal = $('#paypointDropdown').val();
                if (paypointDropdownVal > 0) {
                    
                    $('#dotLoaderPaypoint').css('display', 'none');
                }
                //new mod
                if ($('#paypointDropdown').val().trim() === "" || $('#paypointDropdown').val().trim() === "0") {
                    $('#lblPaypointDropdown').empty();
                    $('#lblPaypointDropdown').append("PayPoint *").css('color', 'Red');
                    $('#paypointDropdown').css('border-color', 'Red');
                    isValid = false;
                }
                else {
                    $('#paypointDropdown').css('border-color', 'lightgrey');
                    $('#lblPaypointDropdown').empty();
                    $('#lblPaypointDropdown').append("PayPoint").css('color', 'Black');
                }
            })

            $('#earningDropdown').change(function () {
                var earningDropdownVal = $('#earningDropdown').val();
                if (earningDropdownVal > 0) {
                    $('#dotLoaderEarning').css('display', 'none');
                }
                //new mod
                if ($('#earningDropdown').val().trim() == "" || $('#earningDropdown').val().trim() === "0") {
                    $('#lblEarningDropdown').empty();
                    $('#lblEarningDropdown').append("Earning *").css('color', 'Red');
                    $('#earningDropdown').css('border-color', 'Red');
                    isValid = false;
                }
                else {
                    $('#earningDropdown').css('border-color', 'lightgrey');
                    $('#lblEarningDropdown').empty();
                    $('#lblEarningDropdown').append("Earning").css('color', 'Black');
                }
            })


            $('#datepicker').change(function () {
                ValidateAddForm();
            })

            $('#edGLAccountDropdown').change(function () {
                ValidateEditForm();
            })

            $('#edPayPointDropdown').change(function () {
                ValidateEditForm();
            })

            $('#edEarningDropdown').change(function () {
                ValidateEditForm();
            })

            $('#edDatepicker').change(function () {
                ValidateEditForm();
            })

            $('#addCloseBtn').click(function () {
                ClearAddForm();
            })

            function ValidateAddForm() {

                var isValid = true;
                var str = '*'

                if ($('#accountDropdown').val().trim() == "" || $('#accountDropdown').val().trim() === "0") {
                    //$('#lblAccount').html()[0].empty();
                    $('#lblAccount').empty();
                    $('#lblAccount').append("Account *").css('color', 'Red');
                    $('#accountDropdown').css('border-color', 'Red');
                    isValid = false;
                }
                else {
                    $('#accountDropdown').css('border-color', 'lightgrey');
                    $('#lblAccount').empty();
                    $('#lblAccount').append("Account").css('color', 'Black');
                }

                if ($('#paypointDropdown').val().trim() === "" || $('#paypointDropdown').val().trim() === "0") {
                    $('#lblPaypointDropdown').empty();
                    $('#lblPaypointDropdown').append("PayPoint *").css('color', 'Red');
                    $('#paypointDropdown').css('border-color', 'Red');
                    isValid = false;
                }
                else {
                    $('#paypointDropdown').css('border-color', 'lightgrey');
                    $('#lblPaypointDropdown').empty();
                    $('#lblPaypointDropdown').append("PayPoint").css('color', 'Black');
                }

                if ($('#earningDropdown').val().trim() == "" || $('#earningDropdown').val().trim() === "0") {
                    $('#lblEarningDropdown').empty();
                    $('#lblEarningDropdown').append("Earning *").css('color', 'Red');
                    $('#earningDropdown').css('border-color', 'Red');
                    isValid = false;
                }
                else {
                    $('#earningDropdown').css('border-color', 'lightgrey');
                    $('#lblEarningDropdown').empty();
                    $('#lblEarningDropdown').append("Earning").css('color', 'Black');
                }

                // if ($('#datepicker').val().trim() == "") {
                //     $('#lblDate').empty();
                //     $('#lblDate').append("Date *").css('color', 'Red');
                //     $('#datepicker').css('border-color', 'Red');
                //     isValid = false;
                // }
                // else {
                //     $('#datepicker').css('border-color', 'lightgrey');
                //     $('#lblDate').empty();
                //     $('#lblDate').append("Date").css('color', 'Black');
                // }
                return isValid;
            };

            function ValidateEditForm() {

                var isValid = true;


                if ($('#edGLAccountDropdown').val().trim() == "") {
                    $('#edGLAccountDropdown').css('border-color', 'Red');
                    isValid = false;
                }
                else {
                    $('#edGLAccountDropdown').css('border-color', 'lightgrey');
                }

                if ($('#edEarningDropdown').val().trim() == "") {
                    $('#edEarningDropdown').css('border-color', 'Red');
                    isValid = false;
                }
                else {
                    $('#edEarningDropdown').css('border-color', 'lightgrey');
                }

                if ($('#edPayPointDropdown').val().trim() == "") {
                    $('#edPayPointDropdown').css('border-color', 'Red');
                    isValid = false;
                }
                else {
                    $('#edPayPointDropdown').css('border-color', 'lightgrey');
                }

                // if ($('#edDatepicker').val().trim() == "") {
                //     $('#edDatepicker').css('border-color', 'Red');
                //     isValid = false;
                // }
                // else {
                //     $('#edDatepicker').css('border-color', 'lightgrey');
                // }
                return isValid;
            };
            

            function ClearAddForm() {
                $('#accountDropdown').val($('#accountDropdown option:first').val());
                $('#paypointDropdown').val($('#paypointDropdown option:first').val());
                $('#earningDropdown').val($('#earningDropdown option:first').val());

                $('#earningDropdown').css('border-color', 'lightgrey');
                $('#paypointDropdown').css('border-color', 'lightgrey');
                $('#accountDropdown').css('border-color', 'lightgrey');

                $('#dotLoaderGlAccount').css('display', 'none');
                $('#dotLoaderEarning').css('display', 'none');
                $('#dotLoaderPaypoint').css('display', 'none');
                // $('#lblPaypointDropdown').append("").css('color', 'white');
                // $('#lblAccount').append("").css('color', 'white');
                // $('#lblEarningDropdown').append("").css('color', 'white');

                if ($('#accountDropdown').val().trim() == "") {
                    $('#lblAccount').empty();
                    $('#lblAccount').append("Account").css('color', 'black'); // Remove the asterisk here
                    $('#accountDropdown').css('border-color', 'lightgrey');
                    isValid = false;
                }
                if ($('#paypointDropdown').val().trim() == "") {
                    $('#lblPaypointDropdown').empty();
                    $('#lblPaypointDropdown').append("PayPoint").css('color', 'black'); // Remove the asterisk here
                    $('#paypointDropdown').css('border-color', 'lightgrey');
                    isValid = false;
                }
                if ($('#earningDropdown').val().trim() == "") {
                    $('#lblEarningDropdown').empty();
                    $('#lblEarningDropdown').append("Earning").css('color', 'black'); // Remove the asterisk here
                    $('#earningDropdown').css('border-color', 'lightgrey');
                    isValid = false;
                }
                location.reload();
                // $('#datepicker').val('');
            }

            function ClearEditForm() {
                $('#edGLAccountDropdown').val() == "";
                $('#edEarningDropdown').val() == "";
                $('#edPayPointDropdown').val() == "";
                // $('#edDatepicker').val() == "";
            }

            $('#btnProcess').click(function () {
                $('#AddProcessEarning').modal('show');
            });

            $('.btnManageAcc').click(function () {
                
                var ACTINDX = $(this).attr('data-actindx'); // Retrieve the ACTINDX value from data-actindx attribute
                ManageAccDetails(ACTINDX); // Call the function with ACTINDX as argument

                setTimeout(function () {
                    var accId = GetAccountId();
                }, 1500);
                
                
            });

            $('.btnDeleteAcc').click(function (event) {
                event.preventDefault();
                //GetAccountId();

                var ACTINDX = $(this).attr('data-actindx'); // Retrieve the ACTINDX value from data-actindx attribute

                DeleteAccDetails(ACTINDX); // Call the function with ACTINDX as argument


            });

            $('#saveChangesBtn').click(function () {
                Create();
            });

            $('#edSaveChangesBtn').click(function () {
                var result = ValidateEditForm();
                if (result == false) {
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "Please fill all fields!",
                    });
                    return false;
                }
                var ACTINDX = $(this).attr('data-actindx');
                var formData = new Object();
                formData.ACTINDX = $('#edGLAccountDropdown option:selected').val();
                formData.PayPointId = $('#edPayPointDropdown option:selected').val();
                formData.EarningId = $('#edEarningDropdown option:selected').val();
                //formData.DateCreated = $('#edDatepicker').val();
                formData.accountId = $(".btnManageAcc").attr('data-actid');

                $.ajax({
                    url: 'pay_Account/Edit?id=' + ACTINDX,
                    data: formData,
                    type: 'post',
                    success: function (response) {
                        if (response == null || response.length == 0) {
                            Swal.fire(
                                'Good job!',
                                'Record updated successfully',
                                'success'
                            );

                            setTimeout(function () {
                                // document.location.href = 'http://localhost:82/Pay_Account';
                                location.reload();
                            }, 1500);
                        } else {
                            $('#modalManageAcc').modal('hide');
                            Swal.fire(
                                'Oops...',
                                response,
                                'error'
                            );

                        }
                    },
                    error: function () {

                        Swal.fire(
                            'Good job!',
                             response,
                            'success'
                        );
                    }
                });
            });

            function Create() {
                var result = ValidateAddForm();
                if (result == false) {
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "Please fill all fields!",
                    });
                    return false;
                }
                var formData = new Object();
                formData.ACTINDX = $('#accountDropdown option:selected').val();
                formData.PayPointId = $('#paypointDropdown option:selected').val();
                formData.EarningId = $('#earningDropdown option:selected').val();
                //formData.DateCreated = $('#datepicker').val();

                $.ajax({
                    url: 'pay_Account/Create',
                    data: formData,
                    type: 'post',
                    success: function (response) {
                        if (response == null || response.length == 0) {
                            Swal.fire(
                                'Good job!',
                                'Record added successfully',
                                'success'
                            );

                            setTimeout(function () {
                                // document.location.href = 'http://localhost:82/Pay_Account';
                                location.reload();
                            }, 1500);

                        } else {
                            $('#modalManageAcc').modal('hide');
                            Swal.fire(
                                'Oops...',
                                response,
                                'error'
                            );

                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: "error",
                            title: "Oops...",
                            text: response,
                        });
                    }
                });

            }
            // Function to retrieve account details and populate modal
            function ManageAccDetails(ACTINDX) {
                var earningTypeId;
                var iearning;

                // AJAX request to fetch account details
                $.ajax({
                    url: 'pay_Account/Details?id=' + ACTINDX,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    success: function (response) {
                        if (response == null || response == undefined || response.length == 0) {
                            alert('Unable to save the data.');
                        } else {
                            earningTypeId = response.earningId;
                            iearning = response.earning;

                            // Call functions to populate dropdowns
                            FillAccountGL00100DropDownsType(response.actindx, response.actdescr);
                            FillPaypointDropDownsType(response.payPointId, response.payPointDescription);
                            FillAccountEarningDropDownsType(response.earningId, response.earning);

                            // $('#edDatepicker').val(GetDate(response.dateCreated));
                            // $('#edDatepicker').dateTimePicker();

                            // Display modal
                            $('#modalManageAcc').modal('show');
                            
                        }
                    },
                    error: function (response) {
                        alert('getDetailData error');
                    }
                });
            }

            function DeleteAccDetails(actid) {

                var earningTypeId;
                var iearning;

                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        // AJAX request to fetch account details
                        $.ajax({
                            url: 'pay_Account/DeleteAccount?id=' + actid,
                            type: 'GET',
                            contentType: 'application/json; charset=utf-8',
                            dataType: 'json',
                            success: function (response) {
                                if (response == null || response.length == 0) {
                                    Swal.fire({
                                        title: "Deleted!",
                                        text: "Your record has been deleted.",
                                        icon: "success"
                                    });
                                    setTimeout(function () {
                                        // document.location.href = 'http://localhost:82/Pay_Account';
                                        location.reload();
                                    }, 1500);
                                } else {
                                    earningTypeId = response.earningId;
                                    iearning = response.earning;

                                    // Call functions to populate dropdowns
                                    FillAccountGL00100DropDownsType(response.actindx, response.actdescr);
                                    FillPaypointDropDownsType(response.payPointId, response.payPointDescription);
                                    FillAccountEarningDropDownsType(response.earningId, response.earning);

                                    // $('#edDatepicker').val(GetDate(response.dateCreated));
                                    // $('#edDatepicker').dateTimePicker();

                                    // Display modal
                                    $('#modalManageAcc').modal('show');

                                }
                            },
                            error: function (response) {
                                Swal.fire({
                                    icon: "error",
                                    title: "Oops...",
                                    text: "Something went wrong!",
                                });
                            }
                        });
                        
                    }
                });
                
            }

            function FillAccountGL00100DropDownsType(glaccountTypeId, iglaccount) {
                $(function () {
                    var glAccountDd = $("#edGLAccountDropdown");
                    var glAccountId = 1;
                    glAccountDd.empty().append('<option selected="selected" value="0" disabled = "disabled">Loading.....</option>');

                    $.ajax({
                        type: "POST",
                        url: 'pay_Account/AccountListData?id=' + glAccountId,
                        data: '{}',
                        success: function (response) {
                            glAccountDd.empty().append('<option selected="selected" value="0">--Please select--</option>');
                            $.each(response, function (index,item) {
                                // glAccountDd.append($("<option></option>").val(this['Value']).html(this['Text']));

                                glAccountDd.append($("<option></option>").val(item.value).html(item.text));
                            });
                            glAccountDd.append('<option selected="selected" value="' + glaccountTypeId + '">' + iglaccount + '</option>');
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });
                });
            }

            function FillPaypointDropDownsType(paypointTypeId, ipaypoint) {
                $(function () {
                    var paypointDd = $('#edPayPointDropdown');
                    var paypointId = 2;
                    paypointDd.empty().append('<option selected="selected" value="0" disabled = "disabled">Loading.....</option>');

                    $.ajax({
                        type: "POST",
                        url: 'pay_Account/AccountListData?id=' + paypointId,
                        data: '{}',
                        success: function (response) {
                            paypointDd.empty().append('<option selected="selected" value="0">--Please select--</option>');
                            $.each(response, function (index, item) {
                                // glAccountDd.append($("<option></option>").val(this['Value']).html(this['Text']));

                                paypointDd.append($("<option></option>").val(item.value).html(item.text));
                            });
                            paypointDd.append('<option selected="selected" value="' + paypointTypeId + '">' + ipaypoint + '</option>');
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });
                });
            }

            function FillAccountEarningDropDownsType(earningTypeId, iearning) {
                $(function () {
                    var earningDd = $("#edEarningDropdown");
                    var idEarning = 3;
                    earningDd.empty().append('<option selected="selected" value="0" disabled = "disabled">Loading.....</option>');

                    $.ajax({
                        type: "POST",
                        url: 'pay_Account/AccountListData?id=' + idEarning,
                        data: '{}',
                        success: function (response) {
                            earningDd.empty().append('<option selected="selected" value="0">--Please select--</option>');
                            $.each(response, function (index, item) {
                                // glAccountDd.append($("<option></option>").val(this['Value']).html(this['Text']));

                                earningDd.append($("<option></option>").val(item.value).html(item.text));
                            });
                            earningDd.append('<option selected="selected" value="' + earningTypeId + '">' + iearning + '</option>');
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });
                });
            }

            // function GetDate(dateCreated) {                   
            //         var initialDate = dateCreated;

            //         // Convert the date to mm/dd/yyyy format
            //         var dateObj = new Date(initialDate);
            //         var month = dateObj.getMonth() + 1;
            //         var day = dateObj.getDate();
            //         var year = dateObj.getFullYear();
            //         //var formattedDate = year + '/' + month + '/' + day;

            //         return formattedDate;
            // }


            function GetAccountId() {

                var formData = new Object();
                formData.ACTINDX = $('#edGLAccountDropdown option:selected').val();
                formData.PayPointId = $('#edPayPointDropdown option:selected').val();
                formData.EarningId = $('#edEarningDropdown option:selected').val();
                //formData.DateCreated = $('#edDatepicker').val();

                $.ajax({
                    url: 'pay_Account/GetAccountId',
                    data: formData,
                    type: 'get',
                    success: function (response) {
                        if (response == null ) {
                            alert('Unable to fetch the account id.');
                        } else {

                            $(".btnManageAcc").attr("data-actid", response);
                            $(".btnDeleteAcc").attr("data-actid", response);

                            //alert('The id is  ' + response);
                            return response;
                        }
                    },
                    error: function () {

                        alert('Unable to fetch the account id.');
                    }
                });
            }

            function AddRefreshDropDown() {
                var glAccounts = $('#accountDropdown').val();
                var payPoint = $('#paypointDropdown').val();
                var earnings = $('#earningDropdown').val();

               
                //formData.DateCreated = $('#edDatepicker').val();
                var formData = new Object();
                formData.ACTINDX = $('#accountDropdown option:selected').val();
                formData.PayPointId = $('#paypointDropdown option:selected').val();
                formData.EarningId = $('#earningDropdown option:selected').val();

                $.ajax({
                    url: 'pay_Account/RefreshAccountsConfigDropDown',
                    data: formData,
                    type: 'get',
                    success: function (response) {
                        if (response == null) {
                            alert('Unable to fetch the account id.');
                        } else {
                            
                            if (response[1].modelName == "Pay_Earning") 
                            {
                                $('#earningDropdown').empty().append('<option selected="selected" value="0">--Please select--</option>');
                                $.each(response, function (index, item) {
                                    // glAccountDd.append($("<option></option>").val(this['Value']).html(this['Text']));

                                    $('#earningDropdown').append($("<option></option>").val(item.value).html(item.text));
                                });
                                $('#dotLoaderEarning').css('display', 'none');
                                $('#addEarningOuterDiv').css('pointer-events', '');
                                $('#addEarningOuterDiv').css('opacity', '');

                            }
                            if (response[1].modelName =="GL00100") 
                            {
                                $('#accountDropdown').empty().append('<option selected="selected" value="0">--Please select--</option>');
                                $.each(response, function (index, item) {
                                    // glAccountDd.append($("<option></option>").val(this['Value']).html(this['Text']));

                                    $('#accountDropdown').append($("<option></option>").val(item.value).html(item.text));
                                });
                                $('#dotLoaderGlAccount').css('display', 'none');
                                $('#addAccountOuterDiv').css('pointer-events', '');
                                $('#addAccountOuterDiv').css('opacity', '');
                            }
                            if (response[1].modelName == "Pay_Paypoint") {
                                $('#paypointDropdown').empty().append('<option selected="selected" value="0">--Please select--</option>');
                                $.each(response, function (index, item) {
                                    // glAccountDd.append($("<option></option>").val(this['Value']).html(this['Text']));

                                    $('#paypointDropdown').append($("<option></option>").val(item.value).html(item.text));
                                });
                                $('#dotLoaderPaypoint').css('display', 'none');
                                $('#addPayPointOuterDiv').css('pointer-events','');
                                $('#addPayPointOuterDiv').css('opacity','');
                            }
                            else if (response[1] = null || undefined || response.length ==0){
                                alert('Unable to fetch list data.');
                            }
                            
                            return response;
                        }
                    },
                    error: function () {

                        alert('Unable to fetch the account id.');
                    }
                });
            }

        });

    </script>
}
